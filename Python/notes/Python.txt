Basic Python notes

append - 	foo.append["bar"]

Comment -	#comment - single line
			""" Multi-Line comment...
			"""

Conditionals - 
			Equal to (==)
			Not equal to (!=)
			Less than (<)
			Less than or equal to (<=)
			Greater than (>
)			Greater than or equal to (>=)

			     Boolean Operators
			------------------------      
			True and True is True
			True and False is False
			False and True is False
			False and False is False

			True or True is True
			True or False is True
			False or True is True
			False or False is False

			Not True is False
			Not False is True
			--------------------------
			Not - not is evaluated first;
			And - and is evaluated next;
			Or - or is evaluated last.
			
			Use of and -	1 < 2 and 2 < 3 is True;
							1 < 2 and 2 > 3 is False.
			Use of or - 	1 < 2 or 2 > 3 is True;
							1 > 2 or 2 > 3 is False.
			Use of Not - 	not False will evaluate to True, while not 41 > 40 will return False.

Dictionary - 
			residents = {'Puffin' : 104, 'Sloth' : 105, 'Burmese Python' : 106} # key - value pairs
			Delete Entrie - del dict_name[key_name] 
			New Entries - residents['dog'] = 99
						dict_name[key] = new_value
			Remove - residents.remove("Puffin")

Escaping Chars - 
			\ ('This isn\'t flying, this is falling with style!')

extend - 

For in -	for number in my_list: #my_list = [1, 2, 3, 4]
				print 2 * number

Function -	def foo():
				#indention is a must
			call a function - foo():

If - 		if foo == 1:
				#do this
				print "foo is equal to 1"

If else - 	if foo == 2:
				print 2
			else:
				print "Sorry"

Import - 	import math -- print math.sqrt(25) -- # 5.0
			from math import sqrt
			from math import *


Index access -
			fifth_letter = "MONTY"[4] # Y

insert - list.insert(i, x)
					https://docs.python.org/2/tutorial/datastructures.html

join - 		.join()

Length -	len(foo) # parrot = "Green"  - print len(parrot)

List - 		list_name = [item_1, item_2] #used like array in JS
				access by index -- numbers = [5, 6, 7, 8]  -- print numbers[0] + numbers[1] # equals 11
				assign values -- numbers[0] = 999 #value is changed, the original is replace/lost
				append values -- numbers.append(777) #value added to the end of List [5, 6, 7, 8, 777]
				Slicing list -- first = numbers[0:2] -- print first -- # ?5,6


Lower - 	lower() # parrot = "Green" - print parrot.lower() ## dot notion only works with strings

Math -		add +, subtract -, multipy *, divide /, exponent ** ( eggs = 10 ** 2 # = 100), Modulo % (spam = 3 % 2 # = 1)
			Int - 7
			Float -	1.23
			Bool - True
			max() -- maxium = max(1,2,999,3)
			min() -- minimum = min(1,9)
			abs() -- absolute = abs(-42)
			type() -- print type(4) #number -- print type('Moo') #String print type(.1) #float
			floor -- math.floor(x)
			isnan -- math.isnan(x)  -- https://docs.python.org/2/library/math.html

Print -		print "string" -- print foo_variable
				print "foo" + "bar"
				print "The value of PI is around" + str(3.14)
					string_1 = "foo" -- string_2 = "bar"
				print "the two variables are %s and %s." % (string_1, string_2)

Return - 	return foo #this will output foo

Sort - 		.sort()  -- numbers = [1, 3, 2]
					numbers.sort()

Switch - 	if answer > 5:
				return 1
			elif answer < 5:          
				return -1
			else:
				return 0

Upper - 	upper() # parrot = "Green" - print parrot.upper() ## dot notion only works with strings
				pi = 3.14  -- print str(pi)

Variable -	my_variable = 10



















