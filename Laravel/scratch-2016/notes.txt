Laravel Notes - notes.txt

=============
meta notes
	- VS Code
		- Word wrap
			- http://askubuntu.com/questions/622631/how-to-wrap-text-comments-in-visual-studio-code
			- File/Preferences/User Settings
				- settings.json
					- Add -  "editor.wrappingColumn": 0
		- get spell check
			- more complex than it should be (guess that's a pay feature)
			- https://visualstudiogallery.msdn.microsoft.com/a23de100-31a1-405c-b4b7-d6be40c3dfff
			- https://code.visualstudio.com/Docs/extensions/example-hello-world
=============

Links
	- Software site
		- https://laravel.com/docs/5.0
	- Best instructions on installing Laravel and all software it needs
		- http://tutsnare.com/how-to-install-laravel-on-ubuntu-lamp/

	- Other useful links:
	-	https://getcomposer.org/download/
	-	https://community.c9.io/t/getting-started-with-laravel/1608
	-	https://www.digitalocean.com/community/tutorials/how-to-install-and-use-composer-on-ubuntu-14-04

Installing Laravel
	# download installer
		- composer global require "laravel/installer=~1.1"
	#setting up path
		- export PATH="~/.composer/vendor/bin:$PATH" 
	# change dir where to install
		- cd /var/www/html/
	# download and installing
		- laravel new laravelnew
	# giving permission
		- chmod -R 777 laravelnew

FAQ
	- Where are these files?
		- You can quickly search for a file with CTRL + p (in Sublime & VS Code)
		- Routes.php				app/Http/Requests/routes.php
		- Template foo.blade.php	resources/views/foo.blade.php
		- Contorlers				app/Http/Controlers/FooControllerName.php
		- CSS style sheet			public/css/style.css
		- sass or less				resources/assets/sass/app.scss
		- config files				config/foo.php
		
	- Where can I find help?
		- php artisan
			- this will show you the help file
			
	- How do serve the pages or start the server?
		- php artisan serve
	- Tinker, allows you to make changes in your build via CLI like npm
		- php artisan tinker
			- check data, add data
	
	- Elixir, what is it?
		- Predefined mixin to perform common tasks or an API for defining basic Gulp tasks for your Laravel application.
		- it needs npm to run Gulp and finish the build
		- "gulp --production" will run the sass and minify
		- "gulp watch" to update automatically 

Make(ing)
	- Controllers
		- php artisan make:controller FooControllerName
	- migrations
		- php artisan make:migration FooNameOfFile
Setting up the DB for sqlite
	- create folder and file
		- touch database/database.sqlite
	- change presets in .env from mysql to sqlite
	- change presents in config/database.php at line 29 & 51
		- 29 "'default' => env('DB_CONNECTION', 'sqlite'),"
		- 51 "'database' => database_path('database.sqlite'),"

Create migration
	- fail... file access error
		- check .env
			- DB_CONNECTION=sqlite  // defaults to mysql... must be change to use sqlite
		- correct config/database.php
			- 'database' => database_path('database.sqlite') // no ENV data
			- original
				- 'database' => env('DB_DATABASE', database_path('database.sqlite')),
				- 'database' => database_path('database.sqlite'),


		- do not need to change sqlite dev default values for...
			- 	DB_DATABASE=homestead
				DB_USERNAME=homestead
				DB_PASSWORD=secret
		- might not need permissions changes
			- I made changes before correcting the other files
DB - Create tables...
	- php artisan
		- (use query builder) 
			- DB::table('cards')->insert(['title' => 'My New Card', 'created_at' => new DateTime, 'updated_at' => new DateTime]);
		- error at 07 10:33 ---- typo error... will cause this
			- Illuminate\Database\QueryException with message 'SQLSTATE[HY000]': General error: 1 table cards has no column name update_at (SQL: insert into "cards" ("title", "created_at", "update_at") values (foo bar))'	

Routes
	- list in CLI
		- php artisan route::list
	- Create CRUD routes
		- this line should be in your routes.php file
		- "Route::resource('post', 'PostController');"

============
Random errors while installing or running:
	- give the correct permissions to PHP and or the directories so Laravel can create a new project in Foo directory /var/www/html/foobar

	- add "php5-sqlite" if sqlite "can't find driver", should be included in PHP install, but isn't with *Ubuntu
		- sudo apt-get install php5-sqlite

serve the project/site with this stack
	- "php artisan serve" within the root directory
	

php artisan tinker
	- use to create new "card" adding to DB
		- DB::table('cards')->insert(['title' => 'My New Card', 'created_at' => new DateTime, 'updated_at' => new DateTime]);
		- DB::table('cards')->insert(['title' => 'My Second New Card', 'created_at' => new DateTime, 'updated_at' => new DateTime]);
	- query
		- DB::table('cards')->get();
		- DB::table('cards')->where('title', 'My New Card')->first();
	- delete
		- DB::table('cards')->where('title', 'My New Cards')->delete();

	note: be careful not to tab or escape out of Tinker into the normal CLI, Tinker and CLI look very similar and none of the DB commands will work the same in the CLI.

php artisan make:model Card  //Eloquent 

===
making relationships (wording)

problems
	- Breaking changes from version Laravel 5.0 -5.2
		 - "token mismatch exception"
		 	- work around for dev env tut 
		 		- edit App\Http\Middleware\VerifyCsrfToken
		 			- add pages that you want to bypass check... all = '*' or some =' foo/bar/row/*'

migrations and rolling back, refresh, 
			- he covers this much later @ vid11 12:47

===========
raw notes
===========
note:

    - CLI  // list of commands, not a logical list
    	- php artisan // version, options, commands list
    	- php artisan help foo:bar  // get info on foo:bar

    	-	php artisan make:migration create_user_table --create=users
    			// creating a migration file, with some default values
    		php artisan migrate
    			// implement the migration you just created
    		php artisan migrate:refresh
    			// drop all data in DB and reimplement migration DB setup 
    		php artisan Schema::drop('users');

	- php artisan tinker
		- check User(s) in the DB
			- App\User::all();
		- check Note(s) in the DB
			- App\Note::all();
		- Create a new foo the long way
			- create a Card
				-	namespace App;
					$card = new Card;
					$card->title = 'My First Card';
					$card->save();

			- create a Note
				$note = new Note;
				$note->user_id = 1;
				$note->body = 'The body of the note.';
				$card->addNote($note); // note data is printed to screen

			- create a User				
				$user = new User;
				$user->username = 'FooName';
				$user->email = 'FooName@Bar.com';
				$user->password = bcrypt('FooPassword');
				$user->save();

				User::all(); // data for user printed to screen



			-   $user = new App\User; or 	$user = new User; if you are not in App
				$user->username = 'fooName';
				$user->email = 'fooName@fooemail.com';
				$user->password = bcrypt('fooPassword');
				$user->save();
				
			-	$note = new Note;
				$note->user_id = foo1;
				$note->card_id = fooNumber;
				$note->body = 'Foo note';
				$card->addNote($note);
				
				notes needs
					$table->increments('id');
            		$table->integer('user_id')->unsigned()->index();
            		$table->integer('card_id')->unsigned()->index();
            		$table->text('body');


redo 10
	- error with showing data in cards/1 input field
	- possible DB schema error or naming error(s)
		- delete old migrations, create new ones, add user and notes

	- redid all DB data
	- might be problem with breaking change
	- consider restarting fresh and sprinting through.



===
current to 08
  - end of 7  ... data still showing wrong.  Is my data wrong or displayed wrong or both?
  - It was showing cached data.  It looks like I have more than one DB, cards made on different days with different names.
  - Serving DB and php artisan tinker DB show different
  - Data is now showing in web and CLI the same
  - add another card to match what the tut shows.
  	- done
	  
08
	- php artisan make:migration create_notes_table --create=notes
	- $cards->notes;  // this will get the relationship
	- @ 08 5:00 Tinker CLI not showing relationship for Card/Note correctly
		- $card = App\Card::first();
		- $card->notes;  // should fetch relationship
			- shows "[]" empty set?
			App\Note::all();
				- show data that is the same as his data.
			- maybe his method no longer works or I made an error.
	- $card->notes[0] // this fails... maybe the method notes is broken
	- added a new Note, so now we have a Note for both id 1 and 2.
	- working now
		- must first "$card = App\Card::first();"
		- then "$card->notes;"
	- About Tinker
		- remember to enter/exit it to refresh (I assume it could have data problems if you didn't).
	- watch the SQL queries - 08 @7:00?
		- this is a lesson that Laravel caches the SQL queries
		- DB::listen(function($query) { var_dump($query->sql); });
	- creating a Note all in one line
		- $card->notes()->create(['body' => 'The third note.']);
			- "MassAssignmentException", got to set properties for 'body'
- end 8... everything is working perfectly
- start 9
	- @ 6:59 - had to do the very silly "token mismatch exception" work around in "VerifyCsrfToken"
- end 9 - all working
- start 10
	- @9:49 - still perfect
	- @13:20 - still good post USER table creation
	- @14:21 - errors with DB refresh [drop/migrations]
		- error while refreshing migrations, typo... typo fixed
		- retried refreshing migration... errors
		- rollback migration
		- refresh migration... error
			- error from not having data in new/old tables???
			- added Card, Notes still exist???, Added One User
			???
		- refresh.. looks like create_cards_table works perfect on migration, but Cards and Users don't
		- fails to add User(s), but can add Cards and Notes.
		- how do I fix this?
			- try refresh the long way without Laravels help
				- save affected files else where
					- DB /database/database.sqlite
					- migrations
						- Cards /database/FooDate_create_cards_table.php
						- Notes ..._notes_table.php
						- Users ..._users_table.php
				- delete/remove migration files and database
				- create them again with help from the old files...
					- You would need to make the adjustments to the config files for using sqlite instead of the default mysql DB, but I don't because I already did. 
					- create empty DB file
						- 'touch database.sql'
					- create migrations
						- Create migration file
							-'php artisan make:migration create_cards_table --create=cards'
						- Edit migration file to reflex what you need
						- Migrate file do/make/initialise migration
							- 'php artisan migrate' 
						- The tut added data to the DB this way, I'm not sure if this is requried 
							- in Tinker
								- 'DB::table('cards')->insert(['title' => 'My New Card', 'created_at' => new DateTime, 'updated_at' => new DateTime])';
								- Check what was created
									- DB::table('cards')->get();
								- Delete foo
									- DB::table('cards')->where('title', 'My New Card')->delete();
								- created again, but now the id is one greater
								- added second new card
						- created migrations for Note and User
						- add data for User
				- will it work?
					- yes and no
						- yes all the data can be added and the DB is working great, but you can't add more Notes via the web page.
							- The error shows a problem with the user_id field.
								- Maybe the Cards Contorler needs to be fixed..?
					- How does the app know which User is adding data, bc that seems to be the error it is having?
					- Looks fine @15:47
					- Problems @17:01
						- Showing the User Name instead of ID...
					- @17:26
						- I'm not sure why his code can get the user data from this
							- return $card->notes[0]->user;
					- broken at this point
						- I'm guessing we are using differnt versions of the framework, which is causing errors and or differences in the code.
				    - I will save a compressed version at this point and continue on with what ever version was working last. =(
- end 10 - with it not working 100% bc of above reasons.
- start 11
	- @06:42 working fine, aside from the problem from video 10
	- @14:48 errors detailed message doesn't output like he shows
- end 11
- start/end 12
- start 13
	- Fresh copy, starting with Auth User setup.
		- php artisan make:auth;
		- create DB file
		- adjust DB config files to use sqlite
		- migrate default migrations
			- php artisan migrate
				- must setup DB files first, check notes on adjusting the three files
		- auth working
		- get user lost password/password reset working
		- setup mail with email.php and .env and send data to 'log'
			- MAIL_DRIVER=log
			- restart server to refresh files
- end 13
- start 14
	- middleware
	- no changes made to project
		- jumping back to old project?
			- it looks like he has done the auth config in the old CRUD project, but never showed it being done there, which is strange and troubling.
		- I'm not sure if any of that was required for the project
		- @10:00 he makes middleware
			- php artisan make:middleware MustBeAdministrator
- end 14
- start 15
	- It looks like he is using a fresh copy of a Laravel install for Flashing to the Session
	- I'm going to try and add it to the last fresh copy.
	- 
		- Session::flash('status', 'Hello There');
		  Session::get('status')
		  - that works
		- @8:00 stopped
- start 16
	- "fresh install" again
	- no follow along, just explanation
- end 16
- start 17
	- Useful code you can use for testing in Laravel
		- dd
		- var dump
		- DB::listen(function($query) {
			var_dump($query->sql, $query->bindings);
		})
	- he was using Laravel version 5.2 for this tut
	- routes code that showed all routes within 'middleware' are been extracted into a service provider

	
	
		
	
			

  