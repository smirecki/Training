note.txt

- Basic build
	-Laravel
	- SQLite (fine for one user), mysql (for many users)
	- bootstrap 4
	- ng2/react
	- hosted?

tasktracker app ideas-

CRUD...

- Create tasks (todo?)
	- This could be a todo app, in it's most basic form.
	- It could be for larger project also, for example: losing weight over months, building project, 

- Read tasks
	- It will need to display the task(s).

- Update tasks
	- It will need to update the task(s).

- Delete tasks
	- ... ect.

- Extras for later
	- graphs for progress tracking or future planning
	- alerts - email, sms, mobile app???
	- first built for one person with no sharing or social functions
		- later it could be more open with public pages and friends or follows
	- ???

===
"how-to-build-a-minimum-viable-product"
1. Skateboard
	- Auth, basic task list/todo
2. Scooter
3. Bike
4. Motorcycle
5. Car

==========================
- Follow along notes... some of this will be added to permanent notes

Creating a new project
	- new project via composer
		- composer create-project laravel/laravel myapp
		- note this will create a new folder/dir named myapp with Laravel project contents inside.
	- new project via Github
		- "If you prefer, you can alternatively download a copy of the Laravel repository from GitHub manually. Next run the composer install command in the root of your manually created project directory. This command will download and install the framework's dependencies."

Auth Scaffolding
	- php artisan make:auth

Setup DB for MySQL
	- create database in MySQL fooName
	- .env change
		- DB_DATABASE = fooName
		- DB_USERNAME = ...
		- DB_PASSWORD = ...
	- config/database.php
		- this file should be default configured correctly for MySQL

Migrate DB configurations to DB... ie. create the table in MySQL
	- php artisan migrate

Make User via webpage, check in phpAdmin if it was created correctly
	- looks good

Question...
	- Do I build out page views now or keep adding to the DB with tasks?

Add Tasks to DB
	- 'php artisan make:migration create_tasks_table --create=tasks'
	- add a 'name' string to task migration
	- Question
		- Do I want to add a state to a task (not started, in progress, finished) or should I save that for later?  Keep it simple, add it later.
	- php artisan migrate
	
	- Question if you have a system that has users, which you do, won't you need to know who's task is in column Foo row Bar?  Yes you will... Add a user column to tasks table.
	- add foreign key of User_id to tasks
		-   $table->integer('user_id')->unsigned()->index();
			...
            $table->foreign('user_id')->references('id')->on('users')->onDelete('cascade'); 
    - php artisan migrate:refresh
==
Current state
	- has Users and Tasks in DB

- make model for Task
	- php artisan make:model Task
- fill in Task model
	- must add 'name' to protected $fillable
- add routing
	- add route for show/add/delete
- make page for show view
	- create resource/views/task.blade.php
- adding tasks - validation
	- the laravel tut is very close to what I want to make, but it looks like the are throwing validation into the routes file, which is odd... maybe I'm wrong.
==
current state
	- basic tut completed and it conflicts with the Auth scaffolding, I will need to trouble shoot a fix.
		- bad file name error fixed
	- page looks fine, tried to enter task and failed with error... looks like SQL conflict... it hates my use of Auth...
		- add User to DB
		- add default user_id to created task... the app is happy... task created.
	- are there other problems???
		- can it delete a task? .. Yes

Current state
	- I tried a few basic changed to make it work.  I need to read the old auth code more before making the right changes.  More tomorrow .

Next
	- make the code make sense for more than one user
		- Have it add the correct user_id for whichever user is logged in
		- put the tasks behind the Auth routes
		- make the routes for each user be private to only that users

	- add photos for users
===
Looks like the Intermediate task list is doing the exact thing I wanted to do.  I can follow it and compare what I've done.
	- code here - https://github.com/laravel/quickstart-intermediate

"Eloquent Models" - stored in app/foo.php (this a 'model')

- edited the Models to tell Elouent Models.  Told User what Task(s) are (hasMany)and told Task what User is (belongsTo).

- edit routing
...  IMP!!!!!!!!!! ::::::::::::::::
	- this looks like the very important parts that I missed trying to make the auth play nice on my own.
		- "Once the auth routes are registered, verify that the $redirectTo property on the app/Http/Controllers/Auth/AuthController controller is set to '/tasks':"
		- "It is also necessary to update the app/Http/Middleware/RedirectIfAuthenticated.php file with the proper redirect path:"
			- "return redirect('/tasks');"
- create Task Controller
	- php artisan make:controller TaskController

- remove old routes
- add new routes
- use middleware for routes
	- another important step for the process to work
	- "To require an authenticated users for all actions on the controller, we can add a call to the middleware method from the controller's constructor. All available route middleware are defined in the app/Http/Kernel.php file. In this case, we want to assign the auth middleware to all actions on the controller:"

	- Not the best directions... this tut... 
		- path to file missing for code above this link
			- https://laravel.com/docs/5.2/quickstart-intermediate#building-layouts-and-views
		- app/Http/Controllers/TaskController.php
- views
	- I might not need these files from the last build
		- resources/views/
			- app.blade.php
			- home.blade.php
			- task.blade.php

- Next Adding Tasks
	- https://laravel.com/docs/5.2/quickstart-intermediate#adding-tasks
- stopped at
	- Creating A Policy...
Creating a Policy
	- this wasn't covered in other tuts... why?
	- 'php artisan make:policy TaskPolicy'
		- this was placed here app/Policies/TaskPolicy.php

- Finished last parts of tut and not all parts are working

	- working
		- login of existing user
		- create new user
			- no tasks or form to add new tasks displayed
				- fixed
			- can add new task
			- can't delete tasks
				- 'HttpException in Handler.php line 107:'
				- 'This action is unauthorized.'
				- the error has nothing to do with the above file

	- create task form was never added
		- the whole template hierarchy is different

	- fix...
		- Eloquent Models Task.php, they never included this code in the tut, must find it in the Github codes
			-     	protected $casts = [
        			'user_id' => 'int',